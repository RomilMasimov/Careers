@using System.Globalization
@model OrderAndChatViewModel
@{
    var isRu = CultureInfo.CurrentCulture.Name == "ru-RU";
}

<div class="jp_tittle_main_wrapper">
    <div class="jp_tittle_img_overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="jp_tittle_heading_wrapper">
                    <div class="jp_tittle_heading">
                        <h2>Order</h2>
                    </div>
                    <div class="jp_tittle_breadcrumb_main_wrapper">
                        <div class="jp_tittle_breadcrumb_wrapper">
                            <ul>
                                <li>Home <i class="fa fa-angle-right"></i></li>
                                <li><a asp-area="" asp-controller="Order" asp-action="Index">Orders <i class="fa fa-angle-right"></i></a></li>
                                <li>Order details</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="jp_cp_profile_main_wrapper">
    <div id="app" class="container">
        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
            <div class="message-lists border">
                <a href="#" id="orderButton" class="message-single border-bottom active">
                    @*<div class="thumb">
                            <img src="~/media/specialistProfile/1709f23f-4cdb-41cd-b747-d7d7328f40cd.jpg" class="img-fluid" alt="">
                        </div>*@
                    <div class="body">
                        <h6 class="username">Order Overview</h6>
                        @*<span class="send-time">12 min</span>*@
                    </div>
                </a>
                <div class="message-search border-bottom">
                    <div class="p-2 d-flex align-items-center justify-content-between">
                        <strong>Получать отклики</strong>
                        <label class="switch m-0">
                            <input id="isActive" type="checkbox" @(Model.IsActive ? "checked" : "")>
                            <span class="slider round"></span>
                        </label>
                    </div>
                </div>
                <div id="chats" style="height: 75vh;  overflow-y: scroll;">
                    @foreach (var message in Model.Messages)
                    {
                        <a href="#" data-chatId="@message.Id" data-spec-id="@message.Specialist.AppUserId" id="chatButton" class="message-single">
                            <div class="thumb">
                                <img src="@message.Specialist.ImageUrl" error-src="" class="img-fluid" alt="Profile image">
                            </div>
                            <div class="body">
                                <h6 class="username">@message.Specialist.Name @message.Specialist.Surname</h6>
                                <span class="send-time">@message.Specialist.LastVisit.ToShortTimeString()</span>
                            </div>
                        </a>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 mt-md-0 mt-3">
            <div id="orderContainer" class="jp_rightside_job_categories_wrapper jp_rightside_listing_single_wrapper">
                <div class="jp_rightside_job_categories_heading">
                    <h4>Job Overview</h4>
                </div>
                <div class="jp_jop_overview_img_wrapper text-center">
                    <div class="d-flex w-100 px-5">
                        <div class="jp_job_des pt-5">
                            <h2 class="text-left">Service</h2>
                            <p class="text-left jp_job_des_large_font_size">
                                @(isRu ? Model.Service.DescriptionRU : Model.Service.DescriptionAZ)
                            </p>
                        </div>
                        <div class="jp_jop_overview_img">
                            <img order-state="@Model.State" class="border">
                        </div>
                    </div>
                </div>
                <div class="jp_listing_overview_list_outside_main_wrapper">

                    <div class="row mb-5">
                        <div class="jp_listing_overview_list_main_wrapper col-md-6 col-12">
                            <div class="jp_listing_list_icon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <div class="jp_listing_list_icon_cont_wrapper">
                                <ul>
                                    <li>Date Posted:</li>
                                    <li>@Model.Created.ToString()</li>
                                </ul>
                            </div>
                        </div>

                        <div class="jp_listing_overview_list_main_wrapper col-md-6 col-12">
                            <div class="jp_listing_list_icon">
                                <i class="fa fa-money"></i>
                            </div>
                            <div class="jp_listing_list_icon_cont_wrapper">
                                <ul>
                                    <li>@SharedLocalizer["salary"]:</li>
                                    <li>@Model.PriceMin @(Model.PriceMax.HasValue ? $" - {Model.PriceMax.Value}" : "") AZN / @(isRu ? Model.Measurement?.TextRU : Model.Measurement?.TextAZ)</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Model.Description))
                    {
                        <div class="jp_job_des">
                            <h2>Job Description</h2>
                            <p>
                                @Model.Description
                            </p>
                        </div>
                    }
                    @if (Model.MeetingPoint.Any())
                    {
                        <div class="jp_job_res">
                            <h2>@(isRu ? "Места встречи" : "Görüş yerləri")</h2>
                            <p>
                                <span>@Model.MeetingPoint?.First().Description</span>
                                @foreach (var point in Model.MeetingPoint.Skip(1))
                                {
                                    <span>, @point.Description</span>
                                }
                            </p>
                        </div>
                    }
                    @foreach (var answerOrder in Model.AnswerOrders.Select(m => m.Answer).GroupBy(m => m.Question))
                    {
                        <div class="jp_job_res">
                            <h2>@(isRu ? answerOrder.Key.TextRU : answerOrder.Key.TextAZ)</h2>
                            <ul>
                                @foreach (var answer in answerOrder)
                                {
                                    <li><i class="fa fa-caret-right"></i>&nbsp;&nbsp; @(isRu ? answer.TextRU : answer.TextAZ)</li>
                                }
                            </ul>
                        </div>
                    }
                    @foreach (var clientAnswer in Model.ClientAnswers)
                    {
                        <div class="jp_job_res">
                            <h2>@(isRu ? clientAnswer.Question.TextRU : clientAnswer.Question.TextAZ)</h2>
                            <p>@clientAnswer.Text</p>
                        </div>
                    }
                    <div class="jp_listing_right_bar_btn_wrapper mt-5">
                        <div class="jp_listing_right_bar_btn">
                            <ul class="mt-0">
                                <li class="mt-0">
                                    <a asp-action="Edit"
                                       asp-controller="Order"
                                       asp-area=""
                                       asp-route-id="@Model.Id">
                                        <i class="fa fa-plus-circle"></i> &nbsp;@SharedLocalizer["edit"]
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div id="chatContainer" style="display: none;" class="message-box">

                <div id="messages" style="height: 75vh;  overflow-y: scroll;">

                </div>

                <div class="conversation-write-wrap">
                    <form>
                        <textarea id="text" placeholder="Type a message"></textarea>
                        <label class="send-image">
                            <input type="file"><i class="fa fa-file-image-o"></i>
                        </label>

                        <button type="button" id="btnSendMessage" class="send-message"><i class="fa fa-location-arrow"></i></button>
                    </form>
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts {

    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

    <script>

        //timeout need fix

          const hubConnection = new signalR.HubConnectionBuilder()
              .withUrl("/hub")
              .withAutomaticReconnect().build();
        //hubConnection.serverTimeoutInMilliseconds = 900* 900;


        $('#isActive').change(async function() {
            let input = $(this);
            let isActive = input.prop("checked");
            let result = await(await fetch(`@Url.Action("ChangeIsActiveOrder", "Order")?id=@Model.Id&isActive=${
                input.prop("checked")}`)).json();
            if (!result) {
                setTimeout(function() {
                        input.attr("checked", !isActive);
                },500);
            }
        });

        $('#orderButton').click(function(e) {
            e.preventDefault();
            $('#orderContainer').show();
            $('#chatContainer').hide();

        });

        $('#chats').on( 'click', '[data-chatId]', async function(e) {
            e.preventDefault();
            let chatId = $(this).data('chatid');
            let specId = $(this).data('spec-id');

            let html = await (await fetch(`@Url.Action("GetConversation")/${chatId}`)).text();
            if (html == 'NotFound') {
                e.preventDefault();
                $('#orderContainer').show();
                $('#chatContainer').hide();
            } else {
                $('#messages').data('spec-id', specId);
                $('#messages').data('chat-id', chatId);
                $('#messages').html('');
                $('#messages').prepend(html);
                $('#orderContainer').hide();
                $('#chatContainer').show();
            }
        });


        //signalr
        hubConnection.on('Notify', function (message) {

            // добавляет элемент для диагностического сообщения
            let notifyElem = document.createElement("b");
            notifyElem.appendChild(document.createTextNode(message));
            let elem = document.createElement("p");
            elem.appendChild(notifyElem);
            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);
        });


        hubConnection.on("ReceiveMessage", function (message) {
            let elem = document.createElement("p");
            elem.appendChild(document.createTextNode(message));
            let firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);
        });

        $("#btnSendMessage").on("click",async function (e) {
            let message = $("#text").val();
            let chatId = $('#messages').data('chat-id');
            let userId = $('#messages').data('spec-id');

            hubConnection.invoke("Send", chatId, userId, message);
            let html =await (await fetch(`@Url.Action("RenderMessage")?message=${message}`)).text();
            $('.dashboard-conversation').append(html);
        });


         hubConnection.start().then(function () {
            console.log("connected");
        });

    </script>
}