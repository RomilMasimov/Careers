@model EditedOrderViewModel


<div class="jp_adp_main_section_wrapper">
    <div class="container">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="row">
            <div class="col-12">
                <div class="jp_adp_form_heading_wrapper">
                    <h2>@SharedLocalizer["orderDetails"]</h2>
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Categories" asp-for="@Model.CategoryId" id="categories"></select>
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.SubCategories" id="subCategories"></select>
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Services" id="services"></select>
                </div>
            </div>
            <div id="quetions" class="col-12 mt-3 pb-3 border-top border-bottom"></div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="jp_adp_textarea_main_wrapper p-0 mt-4 border-0">
                    <textarea id="description" rows="5" placeholder="Job Description"></textarea>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Measurments" id="measurments"></select>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <input id="salary-min" type="number" placeholder="Salary Min">
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <input id="salary-max" type="number" placeholder="Salary Max">
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="jp_adp_choose_resume_bottom_btn_post">
                    <ul>
                        <li><a href="#" id="ClickButton"><i class="fa fa-plus-circle"></i>&nbsp; Create order</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {

            let categoryId = $('#categories').val();
            let answerIds = Array('@Model.AnswerIds');

            if (categoryId != "0") {
                categoriesLoaded().then(function () {

                    $('#subCategories').val('@Model.SubCategoryId');

                    subCategoriesLoaded().then(function () {

                        $('#services').val('@Model.ServiceId');

                        servicesLoaded().then(function () {

                            $('input[type="radio"]').each(function () {
                                if ($.inArray($(this).val(), answerIds) !== -1) {
                                    $(this).prop("checked", true);
                                }
                            });

                            $('input[type="checkbox"]').each(function () {
                                if ($.inArray($(this).val(), answerIds) !== -1) {
                                    $(this).prop("checked", true);
                                }
                            });
                        });
                    });
                });
            }
          
        });

        $('#categories').change(categoriesLoaded);
        $('#subCategories').change(subCategoriesLoaded);
        $('#services').change(servicesLoaded);

        $('#ClickButton').click(async function (e) {

            e.preventDefault();

            let categoryId = null;
            let subCategoryId = null;
            let serviceId = null;
            let clientLocation = null;
            let description = null;
            let measurmentId = null;
            let salaryMin = null;
            let salaryMax = null;
            let answerIds = Array();
            let meetingPoints = Array();
            let clientInputAnswers = Array();


            $('input[type="radio"]:checked').each(function () {
                answerIds.push($(this).val());
            });

            $('input[type="checkbox"]:checked').each(function () {
                answerIds.push($(this).val());
            });

            if ($('#points')[0] != undefined) {
                let options = $('#points')[0].selectedOptions;
                for (var i = 0; i < options.length; i++) {
                    meetingPoints.push(options[i].value);
                }
            }

            $('textarea[data-question-id]').each(function () {
                clientInputAnswers.push({
                    QuestionId: $(this).data('question-id'),
                    Answer: $(this).val()
                });
            });

            categoryId = $('#categories').val();
            subCategoryId = $('#subCategories').val();
            serviceId = $('#services').val();
            clientLocation = $('input[data-question-id]').val();
            description = $('#description').val();
            measurmentId = $('#measurments').val();
            salaryMin = $('#salary-min').val();
            salaryMax = $('#salary-max').val();

            let isHaveSingle = $('input').is('[type="radio"]');
            let isHaveMulti = $('input').is('[type="checkbox"]');
            let isHaveClientInputAnswers = $('textarea').is('[data-question-id]');

            if (description == '' || salaryMin == '' || subCategoryId == 0 ||
                (isHaveSingle && answerIds.length == 0) || (isHaveMulti && answerIds.length == 0) ||
                (isHaveClientInputAnswers && clientInputAnswers.some(m => m.Answer == ''))) {
                alert('Enter required fields');
                return;
            }

            await fetch( '@Url.Action("Create", "Order")',
                {
                    method: 'post',
                    headers: new Headers({
                        'Content-Type': 'application/json'
                    }),
                    body: JSON.stringify({
                        Id:'@Model.Id',
                        CategoryId:categoryId,
                        SubCategoryId: subCategoryId,
                        ServiceId: serviceId,
                        ClientLocation: clientLocation,
                        Description: description,
                        MeasurmentId:measurmentId,
                        SalaryMin: salaryMin,
                        SalaryMax: salaryMax,
                        AnswerIds: answerIds,
                        OrderMeetingPoints: meetingPoints,
                        ClientAnswers: clientInputAnswers
                    })

                }).then((res) => {
                    if (res.ok) {
                        return res.json();
                    } else {
                        throw new Error('Something went wrong with sending data or action');
                    }

                }).then((json) => {
                    let url = '@Url.Action("Edit", "Order",new {id=719 })';
                    if (json == 'error data') {
                        alert('Enter required fields');
                    } else {
                        url = url.replace("719", json);
                        window.location.href = url;
                    }
                });
        });

    </script>
}