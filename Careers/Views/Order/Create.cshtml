
<div class="jp_adp_main_section_wrapper">
    <div class="container">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="row">
            <div class="col-12">
                <div class="jp_adp_form_heading_wrapper">
                    <h2>Job Details</h2>
                </div>
                <div class="jp_adp_form_wrapper">
                    <input type="text" placeholder="Job Title">
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Categories" id="categories"></select>
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.SubCategories" id="subCategories"></select>
                </div>
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Services" id="services"></select>
                </div>
            </div>
            <div id="quetions" class="col-12 mt-3 pb-3 border-top border-bottom"></div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="jp_adp_textarea_main_wrapper p-0 mt-4 border-0">
                    <textarea id="description" rows="5" placeholder="Job Description"></textarea>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <select asp-items="ViewBag.Measurments" id="measurments"></select>
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <input id="salary-min" type="number" placeholder="Salary Min">
                </div>
            </div>
            <div class="col-lg-4 col-md-4 col-md-4 col-xs-12">
                <div class="jp_adp_form_wrapper">
                    <input id="salary-max" type="number" placeholder="Salary Max">
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="jp_adp_choose_resume_bottom_btn_post">
                    <ul>
                        <li><a href="#" id="ClickButton"><i class="fa fa-plus-circle"></i>&nbsp; @SharedLocalizer["createorder"]</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>

$('#ClickButton').click(async function (e) {

    e.preventDefault();

    let single = Array();
    let multi = Array();
    let meetingPoints = Array();
    let clientLocation = null;
    let clientInputAnswers = Array();
    let description = null;
    let salaryMin = null;
    let salaryMax = null;
    let subCategoryId = null;
    let serviceId = null;
    let measurmentId = null;

    $('input[type="radio"]:checked').each(function () {
        single.push($(this).val());
    });

    $('input[type="checkbox"]:checked').each(function () {
        multi.push($(this).val());
    });

    if ($('#points')[0] != undefined) {
        let options = $('#points')[0].selectedOptions;
        for (var i = 0; i < options.length; i++) {
            meetingPoints.push(options[i].value);
        }
    }

    $('textarea[data-question-id]').each(function () {
        clientInputAnswers.push({
            QuestionId: $(this).data('question-id'),
            Answer: $(this).val()
        });
    });

    clientLocation = $('input[data-question-id]').val();
    description = $('#description').val();
    salaryMin = $('#salary-min').val();
    salaryMax = $('#salary-max').val();
    serviceId = $('#services').val();
    subCategoryId = $('#subCategories').val();
    measurmentId = $('#measurments').val();

    let isHaveSingle = $('input').is('[type="radio"]');
    let isHaveMulti = $('input').is('[type="checkbox"]');
    let isHaveClientInputAnswers = $('textarea').is('[data-question-id]');

    if (description == '' || salaryMin == '' || subCategoryId == 0 ||
        (isHaveSingle && single.length == 0) || (isHaveMulti && multi.length == 0) ||
        (isHaveClientInputAnswers && clientInputAnswers.some(m => m.Answer == ''))) {
        alert('Enter required fields');
        return;
    }

    await fetch( '@Url.Action("Create", "Order")',
        {
            method: 'post',
            headers: new Headers({
                'Content-Type': 'application/json'
            }),
            body: JSON.stringify({
                Single: single,
                Multi: multi,
                OrderMeetingPoints: meetingPoints,
                ClientLocation: clientLocation,
                ClientAnswers: clientInputAnswers,
                Description: description,
                SalaryMin: salaryMin,
                SalaryMax: salaryMax,
                ServiceId: serviceId,
                SubCategoryId: subCategoryId,
                MeasurmentId:measurmentId
            })

        }).then((res) => {
            if (res.ok) {
                return res.json();
            } else {
                throw new Error('Something went wrong with sending data or action');
            }
        }).then((json) => {
            let url = '@Url.Action("Order", "Order",new {id=719 })';
            url = url.replace("719", json);
            window.location.href = url;
        });
});
    </script>
}